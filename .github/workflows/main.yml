name: CI

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

env:
  IMAGE_TAG: ${{ github.run_id }}

jobs:
  compare-versions-and-schemas:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Fetch feature branch and get version
        run: |
          echo "Using project version and schema-variables.yml from the current (merged) branch..."
          echo "Contents of master branch schema-variables.yml:"
          cat .github/workflows/build-deploy-image/schemas_versions.yml
          feature_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          cp .github/workflows/build-deploy-image/schemas_versions.yml feature_schema-variables.yml
          
          echo "Feature branch version: $feature_version"

      - name: Compare Versions and Schemas
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/master:refs/remotes/origin/master
          git checkout origin/master -- pom.xml
          master_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Master branch version: $master_version"
          echo "Contents of master branch schema-variables.yml:"
          cat .github/workflows/build-deploy-image/schemas_versions.yml
          git show origin/master:.github/workflows/build-deploy-image/schemas_versions.yml > master_schema-variables.yml
          
          echo "Comparing project versions..."
          if [ "$master_version" == "$feature_version" ]; then
              echo "Project version is unchanged"
              VERSION_CHANGED=false
          else
              echo "Project version has changed"
              VERSION_CHANGED=true
          fi
          
          echo "Comparing schema files..."
          if diff -q master_schema-variables.yml feature_schema-variables.yml > /dev/null; then
              echo "No changes in schema-variables.yml"
              SCHEMA_CHANGED=false
          else
              echo "Changes detected in schema-variables.yml"
              SCHEMA_CHANGED=true
          fi
          
          if [ "$SCHEMA_CHANGED" = true ] && [ "$VERSION_CHANGED" = false ]; then
              echo "ERROR: Schema files are different but project version is unchanged. Please increment the project version before merging."
              exit 1
          fi

  deploy-jar-if-schema-changed:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2

      - name: Deploy JAR if Schema Changed
        run: |
          echo "Using schema-variables.yml from the current (merged) branch..."
          echo "Contents of feature branch schema-variables.yml:"
          cat .github/workflows/build-deploy-image/schemas_versions.yml
          feature_schema_variables=$(cat .github/workflows/build-deploy-image/schemas_versions.yml)

          echo "Fetching schema-variables.yml from master branch..."
          git fetch origin master
          git checkout origin/master -- .github/workflows/build-deploy-image/schemas_versions.yml
          echo "Contents of master branch schema-variables.yml:"
          cat .github/workflows/build-deploy-image/schemas_versions.yml
          master_schema_variables=$(cat .github/workflows/build-deploy-image/schemas_versions.yml)


          echo "Comparing schema files..."
          if diff -q <(echo "$master_schema_variables") <(echo "$feature_schema_variables") > /dev/null; then
              echo "No changes in schema-variables.yml"
              DTO_CHANGED=false
          else
              echo "Changes detected in schema-variables.yml"
              DTO_CHANGED=true
          fi

          if [ "$DTO_CHANGED" = true ]; then
              # Your logic for deploying the JAR
              # Remember to replace this with actual commands to build and deploy your JAR file
              echo "Deploying JAR since schema has changed..."
          fi
